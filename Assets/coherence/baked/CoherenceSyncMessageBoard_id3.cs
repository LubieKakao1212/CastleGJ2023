// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_0adbc65a9c562a945b443b2237375cbd_386f64b7_0efc_4ac8_9cc2_e8a537a91adb : PositionBinding
	{
		public override string CoherenceComponentName => "WorldPosition";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(coherenceSync.coherencePosition);
			set => coherenceSync.coherencePosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((WorldPosition)coherenceComponent).value;
			if (!coherenceSync.HasParentWithCoherenceSync)
            {
                value += floatingOriginDelta;
            }
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			update.value = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldPosition();
		}
	}


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'MessageBoard' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncMessageBoard_id3 : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands		
		private MessageBoard MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55_CommandTarget;

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncMessageBoard_id3>();
			if (coherenceSync.TryGetBindingByGuid("8b0fef53-8cf8-4bfd-b3ff-1294f6e09f55", "AddDeathMessageInternal", out Binding MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55))
			{
				MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55_CommandTarget = (MessageBoard)MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55.UnityComponent;
				coherenceSync.AddCommandRequestDelegate("MessageBoard.AddDeathMessageInternal", "(System.UInt32System.UInt32System.ByteSystem.Byte)",
				SendCommand_MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55, ReceiveLocalCommand_MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55, MessageTarget.All, MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55_CommandTarget,false);
			}
			else
			{
				logger.Error("Couldn't find command binding (AddDeathMessageInternal)");
			}
			if (coherenceSync.TryGetBindingByGuid("386f64b7-0efc-4ac8-9cc2-e8a537a91adb", "position", out Binding InternalWorldPosition_Translation_value))
			{
				var clone = new Binding_0adbc65a9c562a945b443b2237375cbd_386f64b7_0efc_4ac8_9cc2_e8a537a91adb();
				InternalWorldPosition_Translation_value.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalWorldPosition_Translation_value)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.RectTransform).position");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
		}
		void SendCommand_MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55(MessageTarget target, object[] args)
		{
			var command = new MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55();
			int i = 0;
			command.target = (uint)((System.UInt32)args[i++]);
			command.source = (uint)((System.UInt32)args[i++]);
			command.messageSet = (uint)((System.Byte)args[i++]);
			command.message = (uint)((System.Byte)args[i++]);
			client.SendCommand(command, target, coherenceSync.EntityID);
		}

		void ReceiveLocalCommand_MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55(MessageTarget target, object[] args)
		{
			var command = new MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55();
			int i = 0;
			command.target = (uint)((System.UInt32)args[i++]);
			command.source = (uint)((System.UInt32)args[i++]);
			command.messageSet = (uint)((System.Byte)args[i++]);
			command.message = (uint)((System.Byte)args[i++]);
			ReceiveCommand_MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55(command);
		}

		void ReceiveCommand_MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55(MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55 command)
		{
			var target = MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55_CommandTarget;
			target.AddDeathMessageInternal((System.UInt32)(command.target),(System.UInt32)(command.source),(System.Byte)(command.messageSet),(System.Byte)(command.message));
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				case MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55 castedCommand:
					ReceiveCommand_MessageBoard_id3_MessageBoard__char_46_AddDeathMessageInternal_8b0fef53_8cf8_4bfd_b3ff_1294f6e09f55(castedCommand);
					break;
				default:
					logger.Warning($"[CoherenceSyncMessageBoard_id3] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
