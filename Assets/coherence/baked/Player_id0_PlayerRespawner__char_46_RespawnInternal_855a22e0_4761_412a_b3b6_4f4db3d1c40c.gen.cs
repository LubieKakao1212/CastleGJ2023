// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using Coherence.ProtocolDef;
	using Coherence.Serializer;
	using Coherence.Brook;
	using UnityEngine;
	using Coherence.Entity;

	public struct Player_id0_PlayerRespawner__char_46_RespawnInternal_855a22e0_4761_412a_b3b6_4f4db3d1c40c : IEntityCommand
	{
		public int spawnpoint;

		public MessageTarget Routing => MessageTarget.AuthorityOnly;
		public uint GetComponentType() => Definition.InternalPlayer_id0_PlayerRespawner__char_46_RespawnInternal_855a22e0_4761_412a_b3b6_4f4db3d1c40c;

		public Player_id0_PlayerRespawner__char_46_RespawnInternal_855a22e0_4761_412a_b3b6_4f4db3d1c40c
		(
			int dataspawnpoint
		)
		{
			spawnpoint = dataspawnpoint;
		}

		public static void Serialize(Player_id0_PlayerRespawner__char_46_RespawnInternal_855a22e0_4761_412a_b3b6_4f4db3d1c40c commandData, IOutProtocolBitStream bitStream)
		{
			bitStream.WriteIntegerRange(commandData.spawnpoint, 32, -2147483648);
		}

		public static Player_id0_PlayerRespawner__char_46_RespawnInternal_855a22e0_4761_412a_b3b6_4f4db3d1c40c Deserialize(IInProtocolBitStream bitStream)
		{
			var dataspawnpoint = bitStream.ReadIntegerRange(32, -2147483648);

			return new Player_id0_PlayerRespawner__char_46_RespawnInternal_855a22e0_4761_412a_b3b6_4f4db3d1c40c
			(
				dataspawnpoint
			){};
		}
	}
}
