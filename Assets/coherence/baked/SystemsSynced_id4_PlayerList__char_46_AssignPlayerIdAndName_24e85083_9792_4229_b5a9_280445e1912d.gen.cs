// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using Coherence.ProtocolDef;
	using Coherence.Serializer;
	using Coherence.Brook;
	using UnityEngine;
	using Coherence.Entity;

	public struct SystemsSynced_id4_PlayerList__char_46_AssignPlayerIdAndName_24e85083_9792_4229_b5a9_280445e1912d : IEntityCommand
	{
		public SerializeEntityID targetPlayerSync;
		public string playerName;

		public MessageTarget Routing => MessageTarget.AuthorityOnly;
		public uint GetComponentType() => Definition.InternalSystemsSynced_id4_PlayerList__char_46_AssignPlayerIdAndName_24e85083_9792_4229_b5a9_280445e1912d;

		public SystemsSynced_id4_PlayerList__char_46_AssignPlayerIdAndName_24e85083_9792_4229_b5a9_280445e1912d
		(
			SerializeEntityID datatargetPlayerSync,
			string dataplayerName
		)
		{
			targetPlayerSync = datatargetPlayerSync;
			playerName = dataplayerName;
		}

		public static void Serialize(SystemsSynced_id4_PlayerList__char_46_AssignPlayerIdAndName_24e85083_9792_4229_b5a9_280445e1912d commandData, IOutProtocolBitStream bitStream)
		{
			bitStream.WriteEntity(commandData.targetPlayerSync);
			bitStream.WriteShortString(commandData.playerName);
		}

		public static SystemsSynced_id4_PlayerList__char_46_AssignPlayerIdAndName_24e85083_9792_4229_b5a9_280445e1912d Deserialize(IInProtocolBitStream bitStream)
		{
			var datatargetPlayerSync = bitStream.ReadEntity();
			var dataplayerName = bitStream.ReadShortString();

			return new SystemsSynced_id4_PlayerList__char_46_AssignPlayerIdAndName_24e85083_9792_4229_b5a9_280445e1912d
			(
				datatargetPlayerSync,
				dataplayerName
			){};
		}
	}
}
